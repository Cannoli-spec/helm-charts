apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "otel-k8s-prometheus.fullname" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "otel-k8s-prometheus.labels" . | nindent 4 }}
data:
  otel-prometheus-config.yaml: |
  {{- with .Values.config }}
    receivers:
      prometheus:
        config:
          scrape_configs:
          {{- with .jobs.podsEndpoints }}
          {{- if .enabled }}
            - job_name: {{ include "otel-k8s-prometheus.name" $ | include "toPrometheus" }}_pods_endpoints
              scrape_interval: {{ $.Values.config.interval }}
              kubernetes_sd_configs:
                # Attempt to scrape endpoints (pods behind annotated services)
                - role: endpoints
                # And also pods that are annotated directly and are not behind a service
                - role: pod
              relabel_configs:
                # K8s scrape labels and transformations
                {{- include "newrelic.prometheusOtelRelabel" $.Values | nindent 16 }}
                # Use replace labels to support prometheus.io/port and prometheus.io/path annotations.
                - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_port ]
                  action: replace
                  target_label: __address__
                  # Matched against labels concatenated with `;`:
                  # First group (captured in $1) gets everything before `:`.
                  # Second group (non-captured) matches the original group.
                  # Third group (captured in $2) matches the port from the port label.
                  # TODO: This will not work with v6.
                  regex: ([^:]+)(?::\d+)?;(\d+)
                  # Just concatenate both captured groups separated by a colon.
                  replacement: $$1:$$2
                - source_labels: [ __address__, __meta_kubernetes_pod_annotation_prometheus_io_path ]
                  action: replace
                  target_label: __address__
                  # Matched against labels concatenated with `;`:
                  # First group (captured in $1) gets the current target.
                  # Second group (captured in $2) matches the path from the path label.
                  regex: (.+);(/.+)
                  # Just concatenate both captured groups.
                  replacement: $$1$$2
          {{- end }}
          {{- end }}

          {{- with .jobs.external }}
          {{- if .enabled }}
            - job_name: {{ include "otel-k8s-prometheus.name" $ | include "toPrometheus" }}_external
              scrape_interval: {{ $.Values.config.interval }}
              kubernetes_sd_configs:
                - role: service
              relabel_configs:
                # Drop targets that are not services with an externalName
                - source_labels:
                  - __meta_kubernetes_service_external_name
                  regex: ".+"
                  action: keep
                # K8s scrape labels and transformations
                {{- include "newrelic.prometheusOtelRelabel" $.Values | nindent 16 }}
          {{- end }}
          {{- end }}

          {{- with .extraScrapeConfigs }}
          {{- . | toYaml | nindent 12 }}
          {{- end }}

    processors:
    {{- if .batchProcessor.enabled }}
      batch: {}
    {{- end }}
    {{- if .nrConventionsProcessors.enabled }}
      resource/nrConventions:
        attributes:
          # Rename service.name, which is actually the prometheus job name, and will confuse NR pipeline
          - action: insert
            key: otelmeta.service.name
            from_attribute: service.name
          - action: delete
            key: service.name
          # Instrumentation meta
          - action: insert
            key: instrumentation.name
            value: {{$.Chart.Name}}
          - action: insert
            key: instrumentation.version
            value: {{$.Chart.Version}}
          # Cluster name
          - action: insert
            key: k8s.cluster.name
            value: ${NR_CLUSTER_NAME}
          # Legacy cluster name attribute
          - action: insert
            key: clusterName
            value: ${NR_CLUSTER_NAME}
      metricstransform/nrConventions:
        transforms:
          - include: ".*"
            match_type: regexp
            action: update
            operations:
              # K8s labels
              - action: update_label
                label: kubernetes_pod_name
                new_label: k8s.pod.name
              - action: update_label
                label: kubernetes_namespace
                new_label: k8s.namespace
              - action: update_label
                label: kubernetes_pod_container_name
                new_label: k8s.pod.container.name
              - action: update_label
                label: kubernetes_pod_node_name
                new_label: k8s.pod.node.name
              - action: update_label
                label: kubernetes_service_name
                new_label: k8s.service.name
    {{- end }}
    {{- with .extraProcessors }}
      {{- . | toYaml | nindent 6 }}
    {{- end }}

    exporters:
      {{- with .otlpExporter }}
      {{- if .enabled }}
      otlp:
        {{- omit . "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with .loggingExporter }}
      {{- if .enabled }}
      logging:
        {{- omit . "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- with $.Values.service.prometheusDebug }}
      {{- if .enabled }}
      prometheus:
        endpoint: ":9000"
        resource_to_telemetry_conversion:
          enabled: true
      {{- end }}
      {{- end }}
      {{- with .extraExporters }}
      {{- . | toYaml | nindent 6 }}
      {{- end }}

    extensions:
      health_check:

    service:
      extensions: [ health_check ]
      pipelines:
        metrics:
          receivers: [ prometheus ]
          processors:
            {{- if .batchProcessor.enabled }}
            - batch
            {{- end }}
            {{- if .nrConventionsProcessors.enabled }}
            - resource/nrConventions
            - metricstransform/nrConventions
            {{- end }}
            {{- range $processor, $_ := .extraProcessors }}
            - {{ $processor }}
            {{- end }}
          exporters:
            {{- if .otlpExporter.enabled }}
            - otlp
            {{- end }}
            {{- if .loggingExporter.enabled }}
            - logging
            {{- end }}
            {{- if $.Values.service.prometheusDebug.enabled }}
            - prometheus
            {{- end }}
            {{- range $exporter, $_ := .extraExporters }}
            - {{ $exporter }}
            {{- end }}
  {{- end }}
